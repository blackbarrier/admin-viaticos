security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            id: App\Security\UserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            access_denied_handler: App\Security\AccessDeniedHandler

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        - { path: ^/agente/getAgentesViaticos, roles: [ROLE_SUPER_ADMIN,ROLE_ADMIN,ROLE_DEPENDENCIA,ROLE_CONTABLE,ROLE_LIQUIDACIONES,ROLE_TESORERIA]}
        - { path: ^/agente, roles: [ROLE_SUPER_ADMIN,ROLE_ADMIN] }
        - { path: ^/usuario/perfil/, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_DEPENDENCIA,ROLE_LIQUIDACIONES,ROLE_CONTABLE,ROLE_TESORERIA] }
        - { path: ^/usuario/perfil/cambiar-password, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_DEPENDENCIA,ROLE_LIQUIDACIONES,ROLE_CONTABLE,ROLE_TESORERIA] }
        - { path: ^/usuario, roles: [ROLE_SUPER_ADMIN] }
        - { path: ^/configuracion, roles: [ROLE_SUPER_ADMIN] }
        - { path: ^/feriado/obtenerPorAnioYMes, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN,ROLE_DEPENDENCIA] }
        - { path: ^/feriado, roles: [ROLE_SUPER_ADMIN] }
        - { path: ^/admin, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN]}
        - { path: ^/cuenta_programa, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN]}
        - { path: ^/viatico/contable/, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_CONTABLE] }       
        - { path: ^/plantilla, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_DEPENDENCIA,ROLE_LIQUIDACIONES,ROLE_CONTABLE,ROLE_TESORERIA] }
        - { path: ^/solicitud, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_DEPENDENCIA,ROLE_LIQUIDACIONES,ROLE_CONTABLE,ROLE_TESORERIA] }
        - { path: ^/viatico, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_DEPENDENCIA,ROLE_LIQUIDACIONES,ROLE_CONTABLE,ROLE_TESORERIA] }
    #Nota: ROLE_TESORERIA y ROLE_LIQUIDACIONES a√∫n no tienen determinadas las rutas.

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
